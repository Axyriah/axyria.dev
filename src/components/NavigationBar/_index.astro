---
import Item, { ItemData } from "./Item.astro";
import ItemsWrapper from "./ItemsWrapper.astro";
import Settings from "./Settings.astro";

export interface Props {
  selected?: string;
}

const items: ItemData[] = [
  {
    id: "home",
    name: "Home",
    uri: "/",
    icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" style="--darkreader-inline-stroke: currentColor;" data-darkreader-inline-stroke=""> <path stroke="none" d="M0 0h24v24H0z" fill="none" style="--darkreader-inline-stroke: none;" data-darkreader-inline-stroke=""></path> <path d="M5 11a2 2 0 0 1 2 2v2h10v-2a2 2 0 1 1 4 0v4a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-4a2 2 0 0 1 2 -2z"></path> <path d="M5 11v-5a3 3 0 0 1 3 -3h8a3 3 0 0 1 3 3v5"></path> <path d="M6 19v2"></path> <path d="M18 19v2"></path> </svg>',
  },
  {
    id: "git",
    name: "Git Hosting Service",
    uri: "https://code.runtime.ee/",
    icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"> <path stroke="none" d="M0 0h24v24H0z" fill="none"/> <circle cx="16" cy="12" r="1"/> <circle cx="12" cy="8" r="1"/> <circle cx="12" cy="16" r="1"/> <path d="M12 15v-6"/> <path d="M15 11l-2 -2"/> <path d="M11 7l-1.9 -1.9"/> <path d="M10.5 20.4l-6.9 -6.9c-.781 -.781 -.781 -2.219 0 -3l6.9 -6.9c.781 -.781 2.219 -.781 3 0l6.9 6.9c.781 .781 .781 2.219 0 3l-6.9 6.9c-.781 .781 -2.219 .781 -3 0z"/> </svg>',
  },
  {
    id: "blog",
    name: "Blog",
    uri: "/blog",
    icon: '<svg fill="none"height="24"stroke="currentColor"stroke-linecap="round"stroke-linejoin="round"stroke-width="2"viewBox="0 0 24 24"width="24"xmlns="http://www.w3.org/2000/svg"><path d="M0 0h24v24H0z"fill="none"stroke="none"></path><path d="M6 4h11a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-11a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1m3 0v18"></path><line x1="13"x2="15"y1="8"y2="8"></line><line x1="13"x2="15"y1="12"y2="12"></line></svg>',
  },
  {
    id: "contact",
    name: "Contact",
    uri: "/contact",
    icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"> <path stroke="none" d="M0 0h24v24H0z" fill="none"/> <circle cx="12" cy="12" r="9"/> <line x1="12" y1="17" x2="12" y2="17.01"/> <path d="M12 13.5a1.5 1.5 0 0 1 1 -1.5a2.6 2.6 0 1 0 -3 -4"/> </svg>',
  },
  {
    id: "thanks",
    name: "Thanks",
    uri: "/thanks",
    icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"> <path stroke="none" d="M0 0h24v24H0z" fill="none"/> <path d="M19.5 12.572l-7.5 7.428l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572"/> <path d="M12 6l-3.293 3.293a1 1 0 0 0 0 1.414l.543 .543c.69 .69 1.81 .69 2.5 0l1 -1a3.182 3.182 0 0 1 4.5 0l2.25 2.25"/> <path d="M12.5 15.5l2 2"/> <path d="M15 13l2 2"/> </svg>',
  },
];

const { selected }: Props = Astro.props;
---

<style>
  nav {
    animation: slide-from-left 0.75s ease-in-out;
  }
  nav {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    float: left;
  }
  nav {
    gap: 16px;
  }
  @media only screen and (max-width: 700px) {
    nav {
      align-items: center;
      gap: 5px;
      margin-bottom: 16px;
    }
    main {
      margin-left: 0;
      margin-top: 0;
    }
  }
</style>

<nav aria-hidden="true">
  <ItemsWrapper>
    <Settings />
    {
      items.map((item) => (
        <Item data={{ ...item, selected: selected === item.id }} />
      ))
    }
  </ItemsWrapper>
</nav>
