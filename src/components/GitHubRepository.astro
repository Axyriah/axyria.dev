---
export interface Props {
  holder: string;
  repository: string;
}

const { holder, repository }: Props = Astro.props;
---

<script define:vars={{ holder, repository }}>
  const mockup = {
    owner: {
      login: "IORuntime",
    },
    name: "failed",
    html_url: "https://code.runtime.ee",
    description: "You are being rate limited by the GitHub API.",
  };
  async function execute() {
    const query = document.querySelector(
      `li.repository-metadata[data-identifier="${holder}/${repository}"]`
    );
    if (query) {
      const response = await fetch(
        `https://api.github.com/repos/${holder}/${repository}`
      );
      let item = await response.json();
      if (!item.owner) {
        item = mockup;
      }
      query.querySelector(".shimmer").remove();
      const element = document.createElement("a");
      const childName = document.createElement("span");
      const breakLine = document.createElement("br");
      const childDescription = document.createElement("p");
      element.href = item.html_url;
      childName.innerHTML = `${item.owner.login}<strong>/${item.name}</strong>`;
      childDescription.innerText = item.description;
      element.appendChild(childName);
      element.appendChild(breakLine);
      element.appendChild(childDescription);
      query.appendChild(element);
    }
  }
  document.addEventListener("DOMContentLoaded", function () {
    execute();
  });
</script>

<style>
  :root {
    --shimmer-1: #1b1b1b;
    --shimmer-2: #2f2f2f;
    --shimmer-3: var(--shimmer-1);
    --shimmer-4: var(--shimmer-1);
  }
  :global(html[data-theme="light"]) {
    --shimmer-1: #e2e3e4;
    --shimmer-2: #f6f7f8;
    --shimmer-3: var(--shimmer-1);
    --shimmer-4: var(--shimmer-1);
  }
  :global(li.repository-metadata) {
    list-style-type: none;
  }
  :global(li.repository-metadata a) {
    color: var(--accent-color);
    font-family: var(--font-heading);
  }
  :global(li.repository-metadata a p) {
    font-family: var(--font-primary);
    color: var(--text-color);
    font-size: 0.85rem;
    max-width: 23rem;
  }
  :global(li.repository-metadata) {
    transition: transform 0.2s ease-in-out;
  }
  :global(li.repository-metadata):hover {
    transform: scale(1.05);
  }
  :global(li.repository-metadata section.shimmer) {
    display: flex;
    flex-direction: column;
    gap: 5px;
  }
  :global(li.repository-metadata section.shimmer *) {
    animation: shim infinite 1.2s linear;
    background: var(--shimmer-1);
    background-image: linear-gradient(
      to right,
      var(--shimmer-1) 0%,
      var(--shimmer-2) 20%,
      var(--shimmer-3) 40%,
      var(--shimmer-4) 100%
    );
    background-repeat: no-repeat;
  }
  :global(li.repository-metadata section.shimmer div.heading) {
    width: 50%;
    height: 20px;
  }
  :global(li.repository-metadata section.shimmer div.para-large) {
    height: 48px;
  }
  :global(li.repository-metadata section.shimmer div.para-small) {
    height: 24px;
  }
  @keyframes shim {
    0% {
      background-position: -468px 0;
    }
    100% {
      background-position: 468px 0;
    }
  }
</style>

<li class="repository-metadata" data-identifier={`${holder}/${repository}`}>
  <section class="shimmer">
    <div class="heading"></div>
    <div class="para-large"></div>
    <div class="para-small"></div>
  </section>
</li>
