---
export interface Props {
  query: string;
}

const { query }: Props = Astro.props;
---

<script define:vars={{ query }}>
  const over = new Audio("/sound/navigation_forward.ogg");
  const out = new Audio("/sound/navigation_backward.ogg");
  const repositories = document.querySelectorAll(query);
  let left = true;
  async function logic(sound) {
    left = !left;
    sound.cloneNode().play();
  }
  repositories.forEach((repository) => {
    repository.addEventListener("mouseover", () => (left ? logic(over) : true));
    repository.addEventListener("mouseleave", () =>
      !left ? logic(out) : true
    );
  });
</script>

<script>
  const audio = new Audio("/sound/ui_unlock.ogg");
  const entries = document.querySelectorAll(
    "li.navigation-entry a, .click-ui-sound"
  );
  entries.forEach((entry) =>
    entry.addEventListener("click", async (event) => {
      event.preventDefault();
      audio.play();
      const href = (entry as any).href;
      if (href) {
        setTimeout(() => (window.location = (entry as any).href), 250);
      }
    })
  );
</script>
